apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.targetSdkVersion
    ndkVersion rootProject.ext.ndkVersion
    defaultConfig {
        applicationId "moe.shizuku.sample"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                abiFilters "armeabi-v7a", 'arm64-v8a', 'x86', 'x86_64'
                cppFlags "-std=c++17"
                arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=c++_static'
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    buildFeatures {
        viewBinding = true
    }
    signingConfigs {
        sign
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.sign
        }
        release {
            signingConfig signingConfigs.sign
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

android.applicationVariants.all { variant ->
    // This task removes remove all ".class" files from stub classes. If we don't do this, app will crash when ProGuard is enabled.
    // It's better to split stub classes to a stand-alone module and use them by compileOnly.
    String taskName = String.format("remove%sStubClasses", variant.name.capitalize())
    String compileJavaTaskName = String.format("compile%sJavaWithJavac", variant.name.capitalize())
    task "${taskName}" {
        doLast {
            delete "${buildDir}/intermediates/javac/${variant.name}/${compileJavaTaskName}/classes/android"
        }
    }
    variant.processJavaResourcesProvider.get().dependsOn(taskName)
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "androidx.localbroadcastmanager:localbroadcastmanager:1.0.0"
    implementation "androidx.annotation:annotation:1.1.0"
    //implementation 'moe.shizuku.privilege:api:3.3.0' // shizuku v3
    implementation project(':api')
    implementation project(':shared')

    implementation 'me.weishu:free_reflection:3.0.1' // bypass hidden api restriction, https://github.com/tiann/FreeReflection
}

apply from: rootProject.file('signing.gradle')